version: '3'

services:
  web:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./public:/usr/share/nginx/html:ro # Serve static files
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro # Custom NGINX config
    depends_on:
      - minio
      - app
    networks:
      - upload-network

  app:
    image: upload-image:latest
    container_name: upload-container
    build:
      context: .
      dockerfile: ./dockerfile
    volumes:
      - .:/app/.
    networks:
      - upload-network
    command: >
      /bin/sh -c "go mod tidy; go run .;"
    depends_on:
      - minio
    ports:
      - 3456:3456

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    ports:
      - "9000:9000" # Console port
      # - "9090:9090" # API port
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    #   - /usr/local/minio/config:/root/.minio
    command: server /data --console-address ":9000" --address ":9090"
    networks:
      - upload-network

networks:
  upload-network:

volumes:
  minio-data: # MinIO data persistence



# version: '3'
# services:
#   minio:
#     image: docker.io/bitnami/minio:2022
#     ports:
#       - '9000:9000' # Map port 9000 on the host to port 9000 in the container
#       - '9001:9001'
#     environment:
#       - MINIO_ROOT_USER=minioadmin
#       - MINIO_ROOT_PASSWORD=minioadmin
#       - MINIO_DEFAULT_BUCKETS=testbucket
#     # command: server /data --address :9000
#     volumes:
#       - minio-data:/data
#     networks:
#       - test-network


# networks:
#   test-network:

# volumes:
#   minio-data: # MinIO data persistence



# docker run  -p 9000:9000 --name minio \
#  -d --restart=always \
#  -e MINIO_ACCESS_KEY=minioadmin \
#  -e MINIO_SECRET_KEY=minioadmin \
#  -v /usr/local/minio/data:/data \
#  -v /usr/local/minio/config:/root/.minio \
#   minio/minio server /data  --console-address ":9000" --address ":9090"
